{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/app.js","assets/js/modules/classlist-polyfill.js","assets/js/modules/focus-accessibility.js","assets/js/modules/foreach-polyfill.js","assets/js/modules/type-ratio-interpolation.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","init","document","createElement","classList","DOMTokenList","prototype","replace","token","replacementToken","tokens","this","toString","split","index","indexOf","slice","remove","apply","add","console","log","ally","version","style","focusSource","window","NodeList","forEach","callback","thisArg","HTMLCollection","Array","scaleRatio","width","minValue","maxValue","ratio","adjustedRatio","Math","max","min","documentElement","setProperty","innerWidth","addEventListener"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCAA,aAGwBN,EAAQ,8BAChBW,OAGUX,EAAQ,gCAChBW,OAGaX,EAAQ,sCAChBW,OAGIX,EAAQ,iCAChBW,oLChBnBD,EAAOJ,QAAU,CAEbK,KAAM,WACI,YAAaC,SAASC,cAAc,KAAKC,YAC3CC,aAAaC,UAAUC,QAAU,SAAUC,EAAOC,GAC9C,IAAIC,EAASC,KAAKC,WAAWC,MAAM,KAC/BC,EAASJ,EAAOK,QAAQP,EAAQ,KAC/BM,IACDJ,EAASA,EAAOM,MAAMF,GACtBH,KAAKM,OAAOC,MAAMP,KAAMD,GACxBC,KAAKQ,IAAIV,GACTE,KAAKQ,IAAID,MAAMP,KAAMD,EAAOM,MAAM,8CCXtDhB,EAAOJ,QAAU,CAEbK,KAAM,WAEFmB,QAAQC,IAAI,iBAAkBC,KAAKC,QAAS,cACxBD,KAAKE,MAAMC,qDCLvCzB,EAAOJ,QAAU,CAEbK,KAAM,WACE,aAAcyB,SAAWC,SAASrB,UAAUsB,UAC5CD,SAASrB,UAAUsB,QAAU,SAAUC,EAAUC,GAC7CA,EAAUA,GAAWJ,OACrB,IAAK,IAAIvC,EAAI,EAAGA,EAAIwB,KAAKb,OAAQX,IAC7B0C,EAAShC,KAAKiC,EAASnB,KAAKxB,GAAIA,EAAGwB,QAI3Ce,OAAOK,iBAAmBA,eAAezB,UAAUsB,UACnDG,eAAezB,UAAUsB,QAAUI,MAAM1B,UAAUsB,gDCV/D,SAASK,EAAYC,EAAOC,EAAUC,GAClC,IAEM5C,GAAiB4C,EAAWD,GAAZ,KAEhBE,EAAgBH,EAAQ1C,GADR2C,EAHA,IAGW3C,GAE3B8C,EAAgBC,KAAKC,IAAIL,EAAUI,KAAKE,IAAIJ,EAAOD,IAEzDlC,SAASwC,gBAAgBlB,MAAMmB,YAAY,UAAWL,GAE1DtC,EAAOJ,QAAU,CAGbK,KAAM,WAQFgC,EAFkBP,OAAOkB,WAJJ,MAEA,MAMrBlB,OAAOmB,iBAAiB,SAAU,WAE9BZ,EADkBP,OAAOkB,WATR,MAEA","file":"app.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n\n// polyfill to enable us to use forEach on node lists in internet explorer\nconst ForEachPolyfill = require(\"./modules/foreach-polyfill\");\nForEachPolyfill.init();\n\n// polyfill to allow use of replace method on a classList in internet explorer\nconst ClassListPolyfill = require(\"./modules/classlist-polyfill\");\nClassListPolyfill.init();\n\n// interpolate between minimum ratio & maximum ratio, based on current viewport width\nconst TypeRatioInterpolation = require(\"./modules/type-ratio-interpolation\");\nTypeRatioInterpolation.init();\n\n// detect focus source using a11y.js\nconst FocusAccessibility = require(\"./modules/focus-accessibility\");\nFocusAccessibility.init();\n","module.exports = {\n    // polyfill to allow use of replace method on a classList in internet explorer\n    init: () => {\n        if (!(\"replace\" in document.createElement(\"_\").classList)) {\n            DOMTokenList.prototype.replace = function (token, replacementToken) {\n                let tokens = this.toString().split(\" \");\n                let index  = tokens.indexOf(token + \"\");\n                if (~index) {\n                    tokens = tokens.slice(index);\n                    this.remove.apply(this, tokens);\n                    this.add(replacementToken);\n                    this.add.apply(this, tokens.slice(1));\n                }\n            };\n        }\n    },\n};\n","module.exports = {\n    // detect focus source using a11y.js\n    init: () => {\n        /* global ally */\n        console.log(\"loaded version\", ally.version, \"of a11y.js\");\n        const focusSource = ally.style.focusSource(); // eslint-disable-line no-unused-vars\n    },\n};\n","module.exports = {\n    // polyfill to enable us to use forEach on node lists in internet explorer\n    init: () => {\n        if (\"NodeList\" in window && !NodeList.prototype.forEach) {\n            NodeList.prototype.forEach = function (callback, thisArg) {\n                thisArg = thisArg || window;\n                for (var i = 0; i < this.length; i++) {\n                    callback.call(thisArg, this[i], i, this);\n                }\n            };\n        }\n        if (window.HTMLCollection && !HTMLCollection.prototype.forEach) {\n            HTMLCollection.prototype.forEach = Array.prototype.forEach;\n        }\n    },\n};\n","// interpolate between minimum ratio and maximum ratio,\n// based on current viewport width\nfunction scaleRatio (width, minValue, maxValue) {\n    const minRange      = 480;\n    const maxRange      = 1680;\n    const a             = (maxValue - minValue) / (maxRange - minRange);\n    const b             = minValue - a * minRange;\n    const ratio         = width * a + b;\n    const adjustedRatio = Math.max(minValue, Math.min(ratio, maxValue));\n    // update CSS custom property '--ratio' with ratio figure from the above math\n    document.documentElement.style.setProperty(\"--ratio\", adjustedRatio);\n}\nmodule.exports = {\n    // interpolate between type ratio minimum and maximum values\n    // store the result in a CSS custom property\n    init: () => {\n        // add smallest type ratio from variables.styl here\n        let typeRatioSmall = 1.125;\n        // add largest type ratio from variables.styl here\n        let typeRatioLarge = 1.24;\n        // get current viewport width\n        let screenWidth = window.innerWidth;\n        // apply the ratio scaling function\n        scaleRatio(screenWidth, typeRatioSmall, typeRatioLarge);\n        // watch for change in the viewport width and recalculate if change is detected\n        window.addEventListener(\"resize\", () => {\n            let screenWidth = window.innerWidth;\n            scaleRatio(screenWidth, typeRatioSmall, typeRatioLarge);\n        });\n    },\n};\n"]}